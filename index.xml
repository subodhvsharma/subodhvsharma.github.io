<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>https://subodhvsharma.github.io/</link>
      <atom:link href="https://subodhvsharma.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2019 SubodhSharma</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://subodhvsharma.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Academic</title>
      <link>https://subodhvsharma.github.io/</link>
    </image>
    
    <item>
      <title>Assignment 1 (non-credit)</title>
      <link>https://subodhvsharma.github.io/course/col100/assign1/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0100</pubDate>
      <guid>https://subodhvsharma.github.io/course/col100/assign1/</guid>
      <description>&lt;h4 id=&#34;1-learn-the-following-basics-of-unix&#34;&gt;1. Learn the following basics of Unix:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;What is a Unix terminal and how to open one? Reference: &lt;a href=&#34;http://www.ee.surrey.ac.uk/Teaching/Unix/unixintro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unix Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;What are files and processes? What is a directory and how are files grouped together in a directory structure? Reference: &lt;a href=&#34;http://www.ee.surrey.ac.uk/Teaching/Unix/unix1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unix Tutorial 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;How to list files and directories?  How to create files and directories? How to copy and move files? Reference: &lt;a href=&#34;http://www.ee.surrey.ac.uk/Teaching/Unix/unix2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unix Tutorial 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;What are file access permissions and how to change them? Reference: &lt;a href=&#34;http://www.ee.surrey.ac.uk/Teaching/Unix/unix5.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unix Tutorial 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:Brown&#34;&gt; &lt;strong&gt;It is expected that by the end of this task, you are familiar with the usage of unix commands such as: &lt;code&gt;ls, cp, rm, mv, touch, chmod, groups, passwd, cd, pwd, mkdir, rmdir&lt;/code&gt;&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-open-up-a-browser-firefoxchrome-and-access-the-col100-homepage&#34;&gt;2. Open up a browser (firefox/Chrome) and access the COL100 homepage.&lt;/h4&gt;
&lt;h4 id=&#34;3-open-an-email-client-webmail-iit-delhi-and-login-to-your-account-send-an-email-to-the-instructor-of-col100-and-then-logout&#34;&gt;3. Open an email client (webmail IIT Delhi) and login to your account. Send an email to the instructor of COL100 and then logout.&lt;/h4&gt;
&lt;h4 id=&#34;4-learn-how-to-use-and-navigate-a-text-editor&#34;&gt;4. Learn how to use and navigate a text editor:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Type the following command on your terminal prompt: &lt;span style=&#34;color:DarkBlue&#34;&gt; &lt;strong&gt;&lt;code&gt;gedit &amp;amp;&lt;/code&gt;&lt;/strong&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Open the &lt;a href=&#34;https://help.gnome.org/users/gedit/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gedit tutorial&lt;/a&gt; and experiment with at least the following sections (you can experiment with all the subsections on the gedit tutorial page, if you like):
&lt;ul&gt;
&lt;li&gt;File basics: Open, close, and save files&lt;/li&gt;
&lt;li&gt;Replace text and Search for text&lt;/li&gt;
&lt;li&gt;Undo a recent action&lt;/li&gt;
&lt;li&gt;Turn on syntax highlighting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-learn-how-to-work-with-sml-programs&#34;&gt;5. Learn how to work with SML programs:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Open a terminal and execute the command:&lt;span style=&#34;color:DarkBlue&#34;&gt; &lt;strong&gt;&lt;code&gt;sml&lt;/code&gt;&lt;/strong&gt; &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Follow section 3.1-3.3 of the lecture notes and code up the examples. If you wish to experiment more, then you can refer to the &lt;a href=&#34;https://www.cs.princeton.edu/courses/archive/fall08/cos441/notes/lect-SMLNJ.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slide deck here&lt;/a&gt; from slide 5 onwards.&lt;/li&gt;
&lt;li&gt;Type the following programs in separate files and learn how to load and execute them in the interactive SML environment:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode sml&#34;&gt;&lt;code class=&#34;sourceCode sml&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;fun&lt;/span&gt; factorial(n) = &lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;if&lt;/span&gt; (n = &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;kw&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt; &lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;else&lt;/span&gt; n*factorial(n&lt;span class=&#34;dv&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kw&#34;&gt;fun&lt;/span&gt; gcd(m,n) =&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;if&lt;/span&gt; (n=&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;kw&#34;&gt;then&lt;/span&gt; m&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;kw&#34;&gt;else&lt;/span&gt; gcd(n,m mod n);    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Assignment 1</title>
      <link>https://subodhvsharma.github.io/course/spmoduleinsoftwaresystems-software-abstractions/assign1/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0100</pubDate>
      <guid>https://subodhvsharma.github.io/course/spmoduleinsoftwaresystems-software-abstractions/assign1/</guid>
      <description>&lt;h4 id=&#34;1-spanning-tree&#34;&gt;1. Spanning Tree&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Implement a predicate that takes a binary relation as input (on &lt;strong&gt;univ&lt;/strong&gt; set) and tests whether or not the relation is a &lt;em&gt;tree&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Implement a predicate that takes two binary relations as input and constrains one to be a spanning tree of the other. Use this predicate to give an example of a graph with two distinct spanning trees. Note that the versions of the predicate may be different for directed or undirected graphs. Specify both the versions.&lt;/li&gt;
&lt;li&gt;Consider a weighted undirected graph. Implement a predicate to check whether a given relation forms an MST.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-report&#34;&gt;2. Report&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a report in latex clear.y explaining how you iteratively refined your model and how did Alloy help you to indentify counter-examples in your modeling process.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Assignment 2 (due date Jan 17)</title>
      <link>https://subodhvsharma.github.io/course/col100/assign2/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0100</pubDate>
      <guid>https://subodhvsharma.github.io/course/col100/assign2/</guid>
      <description>&lt;h4 id=&#34;develop-ml-functions-for-the-following-problems&#34;&gt;Develop ML functions for the following problems.&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Computing factorial of a given integer using both recursive and
iterative procedures. For some inputs (from the domain of Integers) the
computation may not terminate. Identify such inputs and provide reason for this non-termination.&lt;/li&gt;
&lt;li&gt;Computing $x^n$. Write both recursive and iterative
versions.&lt;/li&gt;
&lt;li&gt;Computing the $n^{th}$ fibonacci number. First use the algorithm
given by the following functional description:
$fib(1) = 1; fib(2) = 1; fib(n) = fib(n-1)+fib(n-2)$ for $n &amp;gt; 2$.
Also develop iterative algorithms for the same problem.&lt;/li&gt;
&lt;li&gt;The integer square root of $n$ is the integer $k$ such that
$k^2 \leq n &amp;lt; (k+1)^2$.  The integer square root can be computed
using the following inductive process:
&lt;ul&gt;
&lt;li&gt;Compute the integer square root $i$ of $m = n ,\mbox{div}, 4$
recursively.  We then have that $i^2 \leq m &amp;lt; (i+1)^2$.&lt;/li&gt;
&lt;li&gt;Since $m$ and $i$ are integers we have that $(m+1) &amp;lt;= (i+1)^2$.
We thus have $(2i)^2 \leq 4m \leq n &amp;lt; 4m + 4 \leq (2i + 2)^2$.
Hence we have that the integer square root of $n$ is either
$2i$ or $2i+1$.&lt;/li&gt;
&lt;li&gt;Write a recursive ML program corresponding to the above algorithm.
Indicate the type of the function and derive the number
of steps required.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Study the problem of computing &lt;i&gt;perfect numbers&lt;/i&gt; from the the
&lt;a href=&#34;http://www.cse.iitd.ac.in/~suban/COL100/lecture.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lecture notes Example 3.13&lt;/a&gt; and
implement the ML program. Also study the following discussion on
&lt;i&gt;scope rules&lt;/i&gt;. You will be questioned on this problem during the
demonstration.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Assignment 2</title>
      <link>https://subodhvsharma.github.io/course/spmoduleinsoftwaresystems-software-abstractions/assign2/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0100</pubDate>
      <guid>https://subodhvsharma.github.io/course/spmoduleinsoftwaresystems-software-abstractions/assign2/</guid>
      <description>&lt;h3 id=&#34;modeling-fsms-finite-state-machines-easy&#34;&gt;Modeling FSMs (Finite State Machines) [EASY]&lt;/h3&gt;
&lt;p&gt;A FSM has non-empty set of initial states and a transition relation which connects each
state to its successors. Construct an Alloy model of FSMs by adding constraints and having the analyzer solve
them, generate a variety of examples of machines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A deterministic machine, in which each state has at most one successor;&lt;/li&gt;
&lt;li&gt;A non-deterministic machine, in which some states have more than one successor;&lt;/li&gt;
&lt;li&gt;A machine with unreachable states;&lt;/li&gt;
&lt;li&gt;A machine without unreachable states;&lt;/li&gt;
&lt;li&gt;A connected machine in which every state is reachable from every other state;&lt;/li&gt;
&lt;li&gt;A machine with a deadlock: a reachable state that has no successors;&lt;/li&gt;
&lt;li&gt;A machine with a livelock: the possibility of an infinite execution in which a state that is always reachable is never
reached.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;modeling-concurrent-program-executions-challenging&#34;&gt;Modeling Concurrent Program Executions [CHALLENGING]&lt;/h3&gt;
&lt;p&gt;Semantics of any program is generally defined by a set of &lt;em&gt;executions&lt;/em&gt;. An execution of a program is composed of &lt;em&gt;events&lt;/em&gt;. Events are either &lt;em&gt;read&lt;/em&gt; (or &lt;em&gt;write&lt;/em&gt;) from (or to) a location or &lt;em&gt;fences&lt;/em&gt;. Events can also be classified into those that access &lt;em&gt;atomic&lt;/em&gt; locations and those that access &lt;em&gt;non-atomic ($nal$)&lt;/em&gt; locations. Events from the same thread are ordered w.r.t. each other via a total order called  &lt;em&gt;sequenced-before ($sb$)&lt;/em&gt;. Other relations that may exist between events are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dependency relations such as &lt;em&gt;address ($ad$), control ($cd$)&lt;/em&gt; or &lt;em&gt;data ($dd$)&lt;/em&gt; dependency&lt;/li&gt;
&lt;li&gt;whether events are from the same thread ($sthd$) or accessing the same location ($ sloc$)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;reads-from (rf)&lt;/em&gt; relation &amp;ndash; a relation containing edges
to read actions from the write actions whose values they take, &lt;em&gt;coherence-order ($co$)&lt;/em&gt; &amp;ndash; a total order on distinct writes to the same atomic location)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;reads-from-external&lt;/em&gt; ( $rfe \overset{\mathrm{def}}{=} rf \setminus sthd $)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The constaints on the structure of basic well-formed executions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read, write, fence and $nal$ are drawn from the events $E$ that appear in the execution&lt;/li&gt;
&lt;li&gt;Fence operations are distinct from read and write events&lt;/li&gt;
&lt;li&gt;$sb$ is a intra-thread and strict partial order&lt;/li&gt;
&lt;li&gt;the nature of address, control and data dependencies (&lt;em&gt;i.e.,&lt;/em&gt; their relation to read and write events)&lt;/li&gt;
&lt;li&gt;$rf$ is well-formed if the related writes and read are to the same location and is injective. Simialrly, $co$ is well-formed if the writes are to the same location forms a strict partial order.&lt;/li&gt;
&lt;li&gt;$rfe$ is derived from $rf$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above is not an exhaustive list. Some other simpler constriants coming straight from the natural definition of the relations have been left out. One can refer to the paper &lt;a href=&#34;https://dl.acm.org/doi/10.1145/1926385.1926394&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mathematizing C++ Concurrency&lt;/a&gt; for natural definition of the relations mentioned above.&lt;/p&gt;
&lt;p&gt;Release ($rel$) and acquire ($acq$) are atomic write and read events, respectively. A fence can also have release or acquire semantics. A &lt;em&gt;consistent&lt;/em&gt; execution of a program with release and acquire events has the following constraints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A happens-before ($hb$) relation &amp;ndash; created from $sb$ and the syncrhonisation of release and acquire events in the execution.&lt;/li&gt;
&lt;li&gt;$hb$ edges between events accessing the same location, together with $rf, co$ and $fr$ must not form cycles. Note that $fr$ relates each read to all of the writes that are coherence-ordered later than the write that the read observed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implement the basic execution modeling in Alloy and extend your model to the &lt;em&gt;release-acquire&lt;/em&gt; fragment of C11. Show
litmus execution behaviours of consistent executions, data race-free and with race executions.&lt;/p&gt;
&lt;h3 id=&#34;report&#34;&gt;Report&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a report in latex and explain how you iteratively refined the model and how did Alloy help you to indentify counter-examples in your modeling process.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Assignment 3</title>
      <link>https://subodhvsharma.github.io/course/col100/assign3/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0100</pubDate>
      <guid>https://subodhvsharma.github.io/course/col100/assign3/</guid>
      <description>&lt;h4 id=&#34;develop-ml-functions-for-the-following-problems&#34;&gt;Develop ML functions for the following problems.&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Develop a higher order function and show its use in computing
fastpower (from Assign1), perfect numbers(from Assign1), $e^{x}$ up
to some $n$-th term, and the higher order double summation function
to compute $\Sigma_{i = a}^{b}\Sigma_{j=c}^{d}$&lt;/li&gt;
&lt;li&gt;Submit the solutions to the Minor1 questions that you were unable to solve in the exam.&lt;/li&gt;
&lt;li&gt;Study, understand, and code the two primality testing methods from Chapter 5 of the lecture notes.
You are free to use SML or Python for this assignment.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://subodhvsharma.github.io/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Synthesizing Multi-threaded Tests from Sequential Traces to Detect Communication Deadlocks</title>
      <link>https://subodhvsharma.github.io/publication/icst21/</link>
      <pubDate>Sun, 11 Apr 2021 21:34:27 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/icst21/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://subodhvsharma.github.io/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ð &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¬ &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¦ Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%28%23MadeWithWowchemy%20OR%20%23MadeWithAcademic%29&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ð¡ &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;â¬ï¸ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/guide/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;â¤ï¸ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future â¤ï¸&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features ð¦â¨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, ä¸­æ, and PortuguÃªs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy and Digitisation</title>
      <link>https://subodhvsharma.github.io/project/privacy-and-digitisation/</link>
      <pubDate>Wed, 11 Nov 2020 10:37:59 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/project/privacy-and-digitisation/</guid>
      <description>&lt;p&gt;India is arguably the biggest deployer of digitization in public life with large public service applications (in-use or contemplated) like national identity, electronic voting, health registry, national population and voter registries, public credit registry, income and other tax registries, face recognition based access control to airports and other facilities, bluetooth based contact tracing and a national intelligence grid.&lt;/p&gt;
&lt;p&gt;In this project, we are investigating the core privacy requirements in large public service
applications (such as eVoting, Aadhaar, etc.). In particular the two focussed activities under the project are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Design of an end-to-end individually verifiable DRE voting protocol&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Designing a privacy-centric architecture for digital applications where the focus is to address privacy violation &lt;em&gt;ex-ante&lt;/em&gt; rather than &lt;em&gt;ex-post&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Security Types for Synchronous Data Flow Systems.</title>
      <link>https://subodhvsharma.github.io/publication/memocode20/</link>
      <pubDate>Tue, 10 Nov 2020 21:38:57 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/memocode20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Verifying and Testing Concurrent Programs using Constraint Solver based Approaches</title>
      <link>https://subodhvsharma.github.io/publication/icsme20/</link>
      <pubDate>Tue, 10 Nov 2020 21:34:27 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/icsme20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Privacy concerns with Aadhaar</title>
      <link>https://subodhvsharma.github.io/publication/cacm19/</link>
      <pubDate>Tue, 10 Nov 2020 21:24:53 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/cacm19/</guid>
      <description></description>
    </item>
    
    <item>
      <title>IoT Security</title>
      <link>https://subodhvsharma.github.io/project/iot-security/</link>
      <pubDate>Tue, 10 Nov 2020 21:09:11 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/project/iot-security/</guid>
      <description>&lt;p&gt;IoT space is expanding at a tremendous pace and security in IoT systems
has been identified as one of the critical areas which require attention. In this project we are developing
a secure and trusted application layer framework for IoT systems. We, at
IITD, are investigating two important subproblems in the context of security of IoTs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;smart contract verification and automated synthesis of smart contracts.&lt;/li&gt;
&lt;li&gt;Creation of&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:slateblue&#34;&gt; The project is funded by the &lt;a href=&#34;https://www.jst.go.jp/inter/english/sicorp/country/jointlab.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DST-JST grant&lt;/a&gt; and Denso Corporation. &lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;span-stylecolorred-ra-positions-are-available-under-this-project-span&#34;&gt;&lt;span style=&#34;color:red&#34;&gt; RA positions are available under this project &lt;/span&gt;&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Verification of Message Passing Systems</title>
      <link>https://subodhvsharma.github.io/project/verification-of-message-passing-systems/</link>
      <pubDate>Tue, 10 Nov 2020 18:32:22 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/project/verification-of-message-passing-systems/</guid>
      <description>&lt;p&gt;Message passing is pervasive &amp;ndash; from inter processs communication in multicores to high performance computing, message passing plays a central role. In this project, we envison to create a&lt;br&gt;
framework to analyse message passing systems. In particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create efficient dynamic symbolic encodings for VCs in message passing programs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exploit the symmetry and parametricity to scale up the verification problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:slateblue&#34;&gt;The project is funded by the DST-ECRA grant &lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verification of C11 Concurrency</title>
      <link>https://subodhvsharma.github.io/project/verification-of-c11-concurrency/</link>
      <pubDate>Tue, 10 Nov 2020 15:00:53 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/project/verification-of-c11-concurrency/</guid>
      <description>&lt;p&gt;Verification of parallel systems is a complex exercise. The large state spaces created due to thread interleavings complicates the verification of such parallel systems. The problem becomes even harder in case of parallel programs executed under relaxed memory models. Under this project we are investigating two directions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A runtime analysis that uses dynamic partial order reduction (DPOR) to verify other multi-copy atomic (oMCA) behaviors of C++11 programs&lt;/li&gt;
&lt;li&gt;A static analysis of &lt;em&gt;Release-Acquire&lt;/em&gt; memory fragment of C11 concurrency by exploiting thread-modular abstract interpretation technique.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;color:slateblue&#34;&gt; These projects is funded by the DST Early Career Research grant.  &lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://subodhvsharma.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;porridge &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; porridge &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eating...&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{{% speaker_note %}}
&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; Only the speaker can read these notes
&lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; Press &lt;span style=&#34;color:#e6db74&#34;&gt;`S`&lt;/span&gt; key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;slide&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;background-image&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/media/boards.jpg&amp;#34;&lt;/span&gt; &amp;gt;}}
{{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;slide&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;background-color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt; &amp;gt;}}
{{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;slide&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-style&amp;#34;&lt;/span&gt; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;reveal&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
.&lt;span style=&#34;color:#a6e22e&#34;&gt;reveal&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
.&lt;span style=&#34;color:#a6e22e&#34;&gt;reveal&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;navy&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamic Symbolic Verification of MPI Programs</title>
      <link>https://subodhvsharma.github.io/publication/fm18/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/fm18/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Zeus: Analyzing Safety of Smart Contracts.</title>
      <link>https://subodhvsharma.github.io/publication/ndss18/</link>
      <pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/ndss18/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Precise Predictive Analysis for Discovering Communication Deadlocks in MPI Programs</title>
      <link>https://subodhvsharma.github.io/publication/toplas17/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/toplas17/</guid>
      <description> &lt;!-- Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;</description>
    </item>
    
    <item>
      <title>POLLUX: Safely Upgrading Dependent Application Libraries</title>
      <link>https://subodhvsharma.github.io/publication/fse16/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/fse16/</guid>
      <description> &lt;!-- Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;</description>
    </item>
    
    <item>
      <title>From Traces to Proofs: Proving Concurrent Programs Safe</title>
      <link>https://subodhvsharma.github.io/publication/tase16/</link>
      <pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/tase16/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Efficient Verification of Concurrent Programs over TSO Memory Model</title>
      <link>https://subodhvsharma.github.io/publication/arxiv16-concurrencyproofs/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/arxiv16-concurrencyproofs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Unfolding-based Partial Order Reduction</title>
      <link>https://subodhvsharma.github.io/publication/concur15/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/concur15/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
 --&gt;
 &lt;!-- Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;</description>
    </item>
    
    <item>
      <title>Accelerated Test Execution using GPUs</title>
      <link>https://subodhvsharma.github.io/publication/ase14/</link>
      <pubDate>Mon, 15 Sep 2014 17:06:05 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/ase14/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Precise Predictive Analysis for Discovering Communication Deadlocks in MPI Programs</title>
      <link>https://subodhvsharma.github.io/publication/fm14/</link>
      <pubDate>Mon, 12 May 2014 17:01:26 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/fm14/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MAPPED: Predictive Dynamic Analysis Tool for MPI Applications</title>
      <link>https://subodhvsharma.github.io/publication/sc12/</link>
      <pubDate>Sat, 10 Nov 2012 16:03:56 +0530</pubDate>
      <guid>https://subodhvsharma.github.io/publication/sc12/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Sound Reduction of Persistent-Sets for Deadlock Detection in MPI Applications</title>
      <link>https://subodhvsharma.github.io/publication/sbmf12/</link>
      <pubDate>Wed, 12 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/sbmf12/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Efficient Verification Solutions for Message Passing Systems</title>
      <link>https://subodhvsharma.github.io/publication/ipdps11/</link>
      <pubDate>Mon, 16 May 2011 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/ipdps11/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MCC: A runtime verification tool for MCAPI user applications</title>
      <link>https://subodhvsharma.github.io/publication/fmcad09/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/fmcad09/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dynamic verification of Multicore Communication applications in MCAPI</title>
      <link>https://subodhvsharma.github.io/publication/hldvt09/</link>
      <pubDate>Wed, 04 Nov 2009 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/hldvt09/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Some resources for teaching concurrency</title>
      <link>https://subodhvsharma.github.io/publication/padtad09/</link>
      <pubDate>Thu, 09 Jul 2009 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/padtad09/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Formal Approach to Detect Functionally Irrelevant Barriers in MPI Programs</title>
      <link>https://subodhvsharma.github.io/publication/eurompi08/</link>
      <pubDate>Sun, 07 Sep 2008 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/eurompi08/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ISP: a tool for model checking MPI programs</title>
      <link>https://subodhvsharma.github.io/publication/ppopp08/</link>
      <pubDate>Sat, 23 Feb 2008 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/publication/ppopp08/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://subodhvsharma.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://subodhvsharma.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
